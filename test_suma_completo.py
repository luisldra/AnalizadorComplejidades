#!/usr/bin/env python3
"""
Test interactivo para suma_iterativa.txt usando el sistema principal
"""

import sys
import os

sys.path.append(os.path.join(os.path.dirname(__file__), 'src'))

def test_suma_iterativa_sistema_principal():
    """Test del sistema principal con suma_iterativa"""
    
    print("üöÄ TESTING SUMA_ITERATIVA.TXT CON SISTEMA PRINCIPAL")
    print("=" * 60)
    
    try:
        from src.main import AnalizadorCompleto
        
        # Cargar el archivo
        analizador = AnalizadorCompleto()
        pseudocodigo = analizador.cargar_pseudocodigo("examples/suma_iterativa.txt")
        
        print(f"‚úÖ Pseudoc√≥digo cargado:")
        print(f"```")
        print(pseudocodigo)
        print(f"```")
        
        print(f"\n" + "=" * 60)
        print("üìä EJECUTANDO TODOS LOS AN√ÅLISIS")
        print("=" * 60)
        
        # Parsear pseudoc√≥digo
        from src.parser.parser import parse_code
        print(f"\nüîÑ Parseando pseudoc√≥digo...")
        ast = parse_code(pseudocodigo)
        print(f"‚úÖ AST generado correctamente")
        
        # 1. An√°lisis b√°sico
        print(f"\n1Ô∏è‚É£ AN√ÅLISIS B√ÅSICO:")
        print("-" * 30)
        analizador.analisis_basico(ast)
        
        # 2. An√°lisis de recursi√≥n
        print(f"\n2Ô∏è‚É£ AN√ÅLISIS DE RECURSI√ìN:")
        print("-" * 30)
        analizador.analisis_recursion(ast)
        
        # 3. An√°lisis DP
        print(f"\n3Ô∏è‚É£ AN√ÅLISIS DE PROGRAMACI√ìN DIN√ÅMICA:")
        print("-" * 30)
        analizador.analisis_con_dp(ast)
        
        # 4. An√°lisis de √°rboles de recurrencia
        print(f"\n4Ô∏è‚É£ AN√ÅLISIS DE √ÅRBOLES DE RECURRENCIA:")
        print("-" * 30)
        analizador.analisis_arboles_recurrencia(ast)
        
        print(f"\n" + "=" * 60)
        print("‚úÖ TODOS LOS AN√ÅLISIS COMPLETADOS")
        print("=" * 60)
        
        # Resumen
        print(f"""
üìã RESUMEN PARA SUMA_ITERATIVA:
--------------------------------
‚úÖ Parsing: EXITOSO
‚úÖ An√°lisis b√°sico: COMPLETADO
‚úÖ Detecci√≥n de recursi√≥n: CORRECTA (No recursivo)
‚úÖ An√°lisis DP: COMPLETADO  
‚úÖ √Årboles de recurrencia: N/A (No recursivo)

üí° El algoritmo suma_iterativa ahora funciona correctamente
   despu√©s de corregir la sintaxis del bucle for.
        """)
        
    except Exception as e:
        print(f"‚ùå Error: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    test_suma_iterativa_sistema_principal()