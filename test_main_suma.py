#!/usr/bin/env python3
"""
Script para probar suma_iterativa.txt con el programa principal
de forma autom√°tica
"""
import subprocess
import sys
import os

def test_main_programa():
    """Test del programa principal de forma autom√°tica"""
    
    print("üß™ TESTING MAIN.PY CON SUMA_ITERATIVA.TXT")
    print("=" * 60)
    
    # Cambiar al directorio del proyecto
    os.chdir("d:\\ArchivosLaptop\\Universidad\\Analisis y Dise√±o de Algoritmos\\Proyecto20252\\AnalizadorComplejidades")
    
    # Input autom√°tico para el programa
    inputs = [
        "examples/suma_iterativa.txt",  # Cargar archivo
        "1",                            # Opci√≥n 1: An√°lisis b√°sico
        "",                            # Enter para continuar
        "3",                            # Opci√≥n 3: An√°lisis de recursi√≥n  
        "",                            # Enter para continuar
        "2",                            # Opci√≥n 2: An√°lisis DP
        "",                            # Enter para continuar
        "8"                             # Opci√≥n 8: Salir
    ]
    
    input_string = "\n".join(inputs) + "\n"
    
    try:
        # Ejecutar el programa principal con inputs autom√°ticos
        result = subprocess.run(
            [sys.executable, "src/main.py"],
            input=input_string,
            text=True,
            capture_output=True,
            timeout=30
        )
        
        print("üì§ SALIDA DEL PROGRAMA:")
        print("-" * 40)
        print(result.stdout)
        
        if result.stderr:
            print("‚ö†Ô∏è ERRORES:")
            print("-" * 40)
            print(result.stderr)
        
        print(f"\n‚úÖ C√≥digo de salida: {result.returncode}")
        
        # Verificar si fue exitoso
        if result.returncode == 0:
            print(f"\nüéâ ¬°√âXITO! El programa principal funciona correctamente con suma_iterativa.txt")
            
            # Verificar que muestre complejidad O(n)
            if "Big O (peor caso):     n" in result.stdout:
                print(f"‚úÖ Complejidad O(n) detectada correctamente")
            else:
                print(f"‚ö†Ô∏è Verificar detecci√≥n de complejidad O(n)")
                
            # Verificar que detecte que no es recursivo
            if "No se detectaron algoritmos recursivos" in result.stdout:
                print(f"‚úÖ Correctamente detectado como no recursivo")
            else:
                print(f"‚ö†Ô∏è Verificar detecci√≥n de recursi√≥n")
                
        else:
            print(f"\n‚ùå ERROR: El programa termin√≥ con c√≥digo {result.returncode}")
            
    except subprocess.TimeoutExpired:
        print(f"\n‚è∞ TIMEOUT: El programa tard√≥ m√°s de 30 segundos")
    except Exception as e:
        print(f"\nüí• ERROR EJECUTANDO: {e}")

if __name__ == "__main__":
    test_main_programa()